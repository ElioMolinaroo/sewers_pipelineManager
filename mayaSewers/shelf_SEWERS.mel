global proc shelf_SEWERS () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Connects you to the Sewers" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SEWERS CONNECTION" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -imageOverlayLabel "connect" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/DEV/sewersPipeline/sewers/icons/sewersConnectAlt.png"
        -image "C:/DEV/sewersPipeline/sewers/icons/sewersConnectAlt.png"
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nif not cmds.commandPort(':5051', query=1):\n    cmds.commandPort(name=\":5051\", sourceType=\"python\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Saves a version of the currently opened file" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SEWERS VERSIONING" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -imageOverlayLabel "version" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/DEV/sewersPipeline/sewers/icons/saveVersionAlt.png"
        -image "C:/DEV/sewersPipeline/sewers/icons/saveVersionAlt.png"
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import sys\nfrom pathlib import Path\nimport re\n\npath_to_sewers = 'C:/DEV/sewersPipeline/sewers'\nif not path_to_sewers in sys.path:\n    sys.path.append(path_to_sewers)\n    \nimport maya.cmds as cmds\nfrom libs.loginLibs import getCurrentUsername\n\n\n# Updates the info for the new version file\ndef getNewVersionInfo(old_name: str, old_path: str):\n    try:\n        path_to_file = Path(old_path.replace(old_name, ''))\n\n        # Extracting the variables\n        temp_name, extension = old_name.split('.')\n        raw_numbers = re.split(r'(\\d+)', temp_name)[-2]\n        raw_name = temp_name.replace(raw_numbers, '')\n\n        # Creating the updated variables\n        new_numbers = int(raw_numbers) + 1\n        new_numbers = str(new_numbers).zfill(3)\n        extension.replace(' ', '')\n        # Merging the modified variables to get the output\n        new_name = f'{raw_name}{new_numbers}.{extension}'\n        new_path = path_to_file / new_name\n        new_path = str(new_path.as_posix())\n\n        return [new_name, new_path]\n\n    except Exception as e:\n        print(e)\n        return ''\n\n\n\npath = cmds.file(query=1, sceneName=1)\nname = cmds.file(query=1, sceneName=1, shortName=1)\n\ntest_save_version_info = getNewVersionInfo(name, path)\n\nif len(test_save_version_info) == 0:\n    print(\"ERROR: the file couldn't be versioned up, probably due to an incorrect naming...\")\nelse:\n    new_name, new_path = test_save_version_info\n    # Saves a version of the file\n    cmds.file(rename=new_path)\n    cmds.file(save=True, type=\"mayaAscii\")\n\n    # Embed the saved by data into the file\n    current_username = getCurrentUsername()\n    cmds.fileInfo(\"savedBy\", current_username)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Publishes your file in the correct folder" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "SEWERS PUBLISH" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -imageOverlayLabel "publish" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "C:/DEV/sewersPipeline/sewers/icons/publishAlt.png"
        -image "C:/DEV/sewersPipeline/sewers/icons/publishAlt.png"
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import sys\nimport os\nimport shutil\nfrom pathlib import Path\n\npath_to_sewers = 'C:/DEV/sewersPipeline/sewers'\nif not path_to_sewers in sys.path:\n    sys.path.append(path_to_sewers)\n    \nimport maya.cmds as cmds\nfrom libs.loginLibs import getCurrentUsername\n\n\n# Updates the info for the publish file\ndef getPublishInfo(old_path: str):\n    try:\n        root_path, path_to_file = old_path.split('edit')\n        root_path = Path(root_path) / 'publish'\n\n        path_to_file = path_to_file.split('_E_')[0]\n        path_to_file = str(path_to_file) + '_P.ma'\n        path_to_file = str(root_path) + path_to_file\n\n        # Convert the result to a readable output\n        file_path = Path(path_to_file)\n\n        file_name = str(file_path).split('\\\\')[-1]\n        publish_path = Path(str(file_path).replace(file_name, ''))\n\n        publish_exists = file_path.is_file()\n\n        return [file_path, publish_exists]\n    except:\n        return ''\n\n\n# Saves a publish\ndef savePublish(publish_exists, new_name, new_path, old_path):\n    # Start the Publish process\n    if publish_exists is True:\n        os.remove(new_path)\n        shutil.copy2(old_path, new_path)\n    elif publish_exists is False:\n        shutil.copy2(old_path, new_path)\n\n\npath = cmds.file(query=1, sceneName=1)\nname = cmds.file(query=1, sceneName=1, shortName=1)\n\ntest_publish_info = getPublishInfo(path)\n\nif len(test_save_version_info) == 0:\n    print(\"ERROR: the file couldn't be versioned up, probably due to an incorrect naming...\")\nelse:\n    file_path, publish_exists = test_publish_info\n    # Publish the file\n    savePublish(publish_exists, name, file_path, path)\n\n\n    # Embed the saved by data into the file\n    current_username = getCurrentUsername()\n    cmds.fileInfo(\"savedBy\", current_username)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
